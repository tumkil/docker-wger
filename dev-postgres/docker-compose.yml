name: wger-dev-postgres

services:
  web:
    build:
      pull: true
      context: ${WGER_CODEPATH:?set the absolute path to the wger backend code in the .env file or env variable}
      dockerfile: ./extras/docker/development/Dockerfile
    develop:
      watch:
        - action: sync
          path: ${WGER_CODEPATH}
          target: /home/wger/src
        - action: rebuild
          path: ${WGER_CODEPATH}/pyproject.toml
        - action: rebuild
          path: ${WGER_CODEPATH}/package.json
    env_file:
      - ../config/prod.env
      - ../config/dev.env
    ports:
      - "8000:8000"

    command: tail -f /dev/null

  cache:
    image: redis
    expose:
      - 6379
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  postgres-data-dev:
